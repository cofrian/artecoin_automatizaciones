import xlwings as xw

def aplicar_filtro(filtro_deseado):
    wb = xw.Book.caller()

    slicercaches_objetivo = [
        "Segmentaci√≥nDeDatos_CENTRO",
        "Segmentaci√≥nDeDatos_CENTRO_8",
        "Segmentaci√≥nDeDatos_CENTRO_10",
        "Segmentaci√≥nDeDatos_CENTRO_11",
        "Segmentaci√≥nDeDatos_CENTRO_15",
        "Segmentaci√≥nDeDatos_CENTRO_7",
        "Segmentaci√≥nDeDatos_CENTRO_1",
        "Segmentaci√≥nDeDatos_CENTRO_2",
        "Segmentaci√≥nDeDatos_CENTRO_3",
        "Segmentaci√≥nDeDatos_CENTRO_4",
        "Segmentaci√≥nDeDatos_CENTRO_5",
        "Segmentaci√≥nDeDatos_CENTRO_6"
    ]

    print(f"\nüîç Aplicando filtro: '{filtro_deseado}' en los slicers de Filtros_G")

    filtro_normalizado = filtro_deseado.strip().lower()

    for cache in wb.api.SlicerCaches:
        if cache.Name not in slicercaches_objetivo:
            continue

        slicers_en_filtros_g = [
            s for s in cache.Slicers
            if s.Shape.TopLeftCell.Worksheet.Name == "Filtros_G"
        ]
        if not slicers_en_filtros_g:
            continue

        nombres_items = [item.Name.strip().lower() for item in cache.SlicerItems]

        if filtro_normalizado in nombres_items:
            print(f"‚úÖ '{filtro_deseado}' encontrado en {cache.Name} ‚Üí aplicando selecci√≥n")
            for item in cache.SlicerItems:
                item.Selected = (item.Name.strip().lower() == filtro_normalizado)
        else:
            print(f"‚ö†Ô∏è '{filtro_deseado}' no est√° en {cache.Name} ‚Üí se omite")

    print("\n‚úÖ Filtro aplicado a todos los slicers v√°lidos.")
